{"version":3,"sources":["webpack:///./js/render.js","webpack:///./js/fps.js","webpack:///./js/components/menu.js","webpack:///./js/components/ui.js","webpack:///./js/paint.js","webpack:///./js/index.js","webpack:///./js/components/info.js","webpack:///./js/app.js","webpack:///./js/glsl/sand.glsl","webpack:///./js/glsl/sandVertex.glsl","webpack:///./crate/pkg/sandtable.js"],"names":["reglBuilder","require","window","memory","fsh","vsh","startWebGL","_ref","canvas","universe","_ref$isSnapshot","isSnapshot","regl","attributes","preserveDrawingBuffer","width","height","cell_pointer","cells","Uint8Array","buffer","dataTexture","texture","data","drawSand","frag","uniforms","t","_ref2","tick","resolution","_ref3","viewportWidth","viewportHeight","dpi","devicePixelRatio","vert","position","count","poll","fps","_class","_classCallCheck","this","document","getElementById","frames","lastFrameTimeStamp","performance","now","key","value","delta","push","length","shift","min","Infinity","max","sum","i","Math","mean","textContent","concat","round","Menu","close","children","react_default","a","createElement","className","react_router_dom","to","onClick","species","Species","pallette_data","Object","values","range","apply","_toConsumableArray","Universe","reset","forEach","id","paint","render","ctx","getContext","readPixels","RGBA","UNSIGNED_BYTE","colors","index","color","pallette","sizeMap","Index","props","_this","ui_classCallCheck","_getPrototypeOf","call","state","submissionMenuOpen","paused","submitting","size","dataURL","currentSubmission","selectedElement","Water","UI","_assertThisInitialized","load","React","Component","prevProps","location","pathname","pause","hash","setState","event","preventDefault","confirm","play","toDataURL","snapshot","context","imgData","createImageData","putImageData","cellData","_this2","_this$state","title","payload","image","fetch","functions","_url","method","body","JSON","stringify","headers","Content-Type","then","res","json","response","console","log","error","_this3","replace","storage","refFromURL","getDownloadURL","dlurl","blob","url","URL","createObjectURL","img","Image","src","onload","drawImage","getImageData","cellsData","flush_undos","push_undo","_this4","_this$state2","Fragment","togglePause","viewBox","points","map","v","e","setSize","style","padding","cx","cy","r","pop_undo","fontSize","keys","n","name","setElement","elementID","selected","background","backgroundColor","filter","ElementButton","incScore","score","menu","closeMenu","display","placeholder","onChange","target","disabled","submit","eventDistance","b","sqrt","pow","clientX","clientY","norm","mag","magnitude","scale","s","add","sub","painting","lastPaint","repeat","smoothPaint","clearInterval","setInterval","startEvent","d","addEventListener","cancelable","handleTouches","check","touches","Array","from","boundingRect","getBoundingClientRect","scaleX","ratio","ceil","scaleY","canvasLeft","left","canvasTop","top","x","floor","y","Info","href","BrowseRouter","match","Browse","AdminRouter","Admin","SigninRouter","SignInScreen","ReactDOM","react_router","path","component","exact","info","__webpack_require__","__webpack_exports__","js_canvas","js_width","js_height","js_universe","js_reset","safari","history","pushState","onpopstate","go","navigator","userAgent","vendor","opera","test","substr","onbeforeunload","renderLoop","animationId","requestAnimationFrame","u","module","exports","freeze","Empty","Wall","Sand","Stone","Shrimp","Mite","Plant","Seed","Dust","__wbg_random_58bd29ed438c19c0","random","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getStringFromWasm","ptr","len","decode","wasm","subarray","__wbindgen_throw","Error","_createClass","freeUniverse","obj","create","prototype","__wrap","heap","fill","undefined"],"mappings":"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","file":"2.15f54dce1d96eb9dd920.js","sourcesContent":["const reglBuilder = require(\"regl\");\nimport { memory } from \"../crate/pkg/sandtable_bg\";\nwindow.memory = memory;\nimport { Species } from \"../crate/pkg/sandtable\";\nimport { Universe } from \"../crate/pkg\";\n\nlet fsh = require(\"./glsl/sand.glsl\");\nlet vsh = require(\"./glsl/sandVertex.glsl\");\n\nlet startWebGL = ({ canvas, universe, isSnapshot = false }) => {\n  const regl = reglBuilder({\n    canvas,\n    attributes: { preserveDrawingBuffer: isSnapshot }\n  });\n  // const lastFrame = regl.texture();\n  const width = universe.width();\n  const height = universe.height();\n  let cell_pointer = universe.cells();\n  let cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n  const dataTexture = regl.texture({ width, height, data: cells });\n\n  let drawSand = regl({\n    frag: fsh,\n    uniforms: {\n      t: ({ tick }) => tick,\n      data: () => {\n        // if (cell_pointer != universe.cells()) {\n        //   console.log(cell_pointer);\n        // }\n        cell_pointer = universe.cells();\n        cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n        // }\n\n        return dataTexture({ width, height, data: cells });\n      },\n      resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight\n      ],\n      dpi: window.devicePixelRatio * 2,\n      isSnapshot\n      // backBuffer: lastFrame\n    },\n\n    vert: vsh,\n    attributes: {\n      // Full screen triangle\n      position: [[-1, 4], [-1, -1], [4, -1]]\n    },\n    // Our triangle has 3 vertices\n    count: 3\n  });\n\n  return () => {\n    regl.poll();\n    drawSand();\n  };\n};\n\nlet snapshot = universe => {\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = universe.width() / 2;\n  canvas.height = universe.height() / 2;\n  let render = startWebGL({ universe, canvas, isSnapshot: true });\n  render();\n\n  return canvas.toDataURL(\"image/png\");\n};\n\nlet pallette = () => {\n  let canvas = document.createElement(\"canvas\");\n\n  let species = Object.values(Species);\n  let range = Math.max(...species) + 1;\n  let universe = Universe.new(range, 1);\n  canvas.width = range;\n  canvas.height = 3;\n  universe.reset();\n\n  species.forEach(id => universe.paint(id, 0, 2, id));\n\n  let render = startWebGL({ universe, canvas, isSnapshot: true });\n  render();\n  let ctx = canvas.getContext(\"webgl\");\n  let data = new Uint8Array(range * 4);\n  ctx.readPixels(0, 0, range, 1, ctx.RGBA, ctx.UNSIGNED_BYTE, data);\n  let colors = {};\n  species.forEach(id => {\n    let index = id * 4;\n    let color = `rgba(${data[index]},${data[index + 1]}, ${\n      data[index + 2]\n    }, 1.0)`;\n    colors[id] = color;\n  });\n  return colors;\n};\n\nexport { startWebGL, snapshot, pallette };\n","const fps = new class {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render() {\n    // Convert the delta time since the last frame render into a measure\n    // of frames per second.\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = (1 / delta) * 1000;\n\n    // Save only the latest 100 timings.\n    this.frames.push(fps);\n    if (this.frames.length > 30) {\n      this.frames.shift();\n    }\n\n    // Find the max, min, and mean of our 100 latest timings.\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    // Render the statistics.\n    this.fps.textContent = `FPS:${Math.round(mean)}`;\n  }\n}();\n\nexport { fps };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = ({ close, children }) => {\n  return (\n    <div className=\"menu-scrim\">\n      <div className={\"menu\"}>\n        {children}\n        <Link to=\"/\" className=\"x\" onClick={close}>\n          <button> x</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Menu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { memory } from \"../../crate/pkg/sandtable_bg\";\nimport { Species } from \"../../crate/pkg/sandtable\";\n\nimport { height, universe, width, reset } from \"../index.js\";\nimport { snapshot, pallette } from \"../render.js\";\n\nimport Menu from \"./menu\";\n\nwindow.species = Species;\nlet pallette_data = pallette();\n\nconst ElementButton = (name, selectedElement, setElement) => {\n  let elementID = Species[name];\n\n  let color = pallette_data[elementID];\n  let selected = elementID == selectedElement;\n\n  let background = \"inherit\";\n  if (elementID == 14) {\n    background = `linear-gradient(45deg, \n    rgba(202, 121, 125, 1.0), \n    rgba(169, 120, 200, 1.0), \n    rgba(117, 118, 195, 1.0), \n    rgba(117, 196, 193, 1.0), \n    rgba(122, 203, 168, 1.0), \n    rgba(185, 195, 117, 1.0), \n    rgba(204, 186, 122, 1.0))`;\n  }\n  return (\n    <button\n      className={selected ? \"selected\" : \"\"}\n      key={name}\n      onClick={() => {\n        setElement(elementID);\n      }}\n      style={{\n        background,\n        backgroundColor: color,\n        filter: selected || `saturate(0.5) `\n      }}\n    >\n      {\"  \"}\n      {name}\n      {\"  \"}\n    </button>\n  );\n};\n\nlet sizeMap = [2, 5, 10, 18, 30, 45];\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissionMenuOpen: false,\n      paused: false,\n      submitting: false,\n      size: 2,\n      dataURL: {},\n      currentSubmission: null,\n      selectedElement: Species.Water\n    };\n    window.UI = this;\n\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname === \"/\" &&\n      prevProps.location.pathname !== \"/\" &&\n      this.state.currentSubmission\n    ) {\n      window.location = `#${this.state.currentSubmission.id}`;\n      return;\n    }\n    if (\n      this.props.location.pathname !== \"/\" &&\n      prevProps.location.pathname == \"/\"\n    ) {\n      this.pause();\n    }\n    if (\n      prevProps.location.hash === \"\" ||\n      prevProps.location.hash != this.props.location.hash\n    ) {\n      this.load();\n    }\n  }\n  togglePause() {\n    window.paused = !this.state.paused;\n    this.setState({ paused: !this.state.paused });\n  }\n  play() {\n    window.paused = false;\n    this.setState({ paused: false });\n  }\n  pause() {\n    window.paused = true;\n    this.setState({ paused: true });\n  }\n\n  setSize(event, size) {\n    event.preventDefault();\n    this.setState({\n      size\n    });\n  }\n  reset() {\n    if (window.confirm(\"Reset?\")) {\n      this.play();\n      window.location = \"#\";\n      this.setState({ currentSubmission: null });\n      reset();\n    }\n  }\n  menu() {\n    this.pause();\n    this.setState({ submissionMenuOpen: true });\n  }\n\n  closeMenu() {\n    this.play();\n    this.setState({ submissionMenuOpen: false });\n  }\n  upload() {\n    let dataURL = snapshot(universe);\n    const cells = new Uint8Array(\n      memory.buffer,\n      universe.cells(),\n      width * height * 4\n    );\n\n    // Create canvas\n    let canvas = document.createElement(\"canvas\"),\n      context = canvas.getContext(\"2d\"),\n      imgData = context.createImageData(width, height);\n\n    canvas.height = height;\n    canvas.width = width;\n\n    // fill imgData with data from cells\n    for (var i = 0; i < width * height * 4; i++) {\n      if (i % 4 == 3) {\n        imgData.data[i] = 255;\n      } else {\n        imgData.data[i] = cells[i];\n      }\n    }\n    // put data to context at (0, 0)\n    context.putImageData(imgData, 0, 0);\n\n    let cellData = canvas.toDataURL(\"image/png\");\n\n    this.pause();\n    this.setState({\n      data: { dataURL, cells: cellData },\n      submissionMenuOpen: true\n    });\n  }\n  submit() {\n    let { title, data } = this.state;\n    let { dataURL, cells } = data;\n    let payload = { title, image: dataURL, cells };\n    this.setState({ submitting: true });\n\n    fetch(functions._url(\"api/creations\"), {\n      method: \"POST\",\n      body: JSON.stringify(payload), // data can be `string` or {object}!\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(\"Success:\", JSON.stringify(response));\n        this.play();\n      })\n      .catch(error => console.error(\"Error:\", error))\n      .then(() => {\n        this.setState({ submissionMenuOpen: false, submitting: false });\n      });\n  }\n\n  load() {\n    let { location } = this.props;\n    let id = location.hash.replace(/#/, \"\");\n    if (id === \"\") {\n      return;\n    }\n\n    if (this.state.currentSubmission && this.state.currentSubmission.id == id) {\n      return;\n    }\n\n    fetch(functions._url(`api/creations/${id}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        storage\n          .refFromURL(\n            `gs://sandtable-8d0f7.appspot.com/creations/${data.id}.data.png`\n          )\n          .getDownloadURL()\n          .then(dlurl => {\n            fetch(dlurl, {\n              method: \"GET\"\n            })\n              .then(res => res.blob())\n              .then(blob => {\n                // console.log(response);\n                this.setState({ currentSubmission: { id, data } });\n\n                var url = URL.createObjectURL(blob);\n                var img = new Image();\n                img.src = url;\n                img.onload = () => {\n                  var canvas = document.createElement(\"canvas\");\n                  canvas.width = width;\n                  canvas.height = height;\n                  var ctx = canvas.getContext(\"2d\");\n                  ctx.drawImage(img, 0, 0);\n                  var imgData = ctx.getImageData(\n                    0,\n                    0,\n                    canvas.width,\n                    canvas.height\n                  );\n\n                  const cellsData = new Uint8Array(\n                    memory.buffer,\n                    universe.cells(),\n                    width * height * 4\n                  );\n\n                  reset();\n\n                  for (var i = 0; i < width * height * 4; i++) {\n                    cellsData[i] = imgData.data[i];\n                  }\n                  universe.flush_undos();\n                  universe.push_undo();\n                  this.pause();\n                };\n              })\n              .catch(error => console.error(\"Error:\", error));\n          });\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  render() {\n    let { size, paused, selectedElement, currentSubmission } = this.state;\n    let hash =\n      currentSubmission && currentSubmission.id\n        ? `#${currentSubmission.id}`\n        : \"\";\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.togglePause()}\n          className={paused ? \"selected\" : \"\"}\n        >\n          {paused ? (\n            <svg height=\"20\" width=\"20\" id=\"d\" viewBox=\"0 0 300 300\">\n              <polygon id=\"play\" points=\"0,0 , 300,150 0,300\" />\n            </svg>\n          ) : (\n            <svg height=\"20\" width=\"20\" id=\"d\" viewBox=\"0 0 300 300\">\n              <polygon id=\"bar2\" points=\"0,0 110,0 110,300 0,300\" />\n              <polygon id=\"bar1\" points=\"190,0 300,0 300,300 190,300\" />\n            </svg>\n          )}\n        </button>\n        {/* <button onClick={() => this.upload()}>Upload</button> */}\n\n        <button onClick={() => this.reset()}>Reset</button>\n        <Link\n          to={{\n            pathname: \"/info/\",\n            hash\n          }}\n        >\n          <button>Info</button>\n        </Link>\n\n        {/* {paused && <button onClick={() => universe.tick()}>Tick</button>} */}\n        <span className=\"sizes\">\n          {sizeMap.map((v, i) => (\n            <button\n              key={i}\n              className={i == size ? \"selected\" : \"\"}\n              onClick={e => this.setSize(e, i)}\n              style={{ padding: \"0px\" }}\n            >\n              <svg height=\"23\" width=\"23\" id=\"d\" viewBox=\"0 0 100 100\">\n                <circle cx=\"50\" cy=\"50\" r={2 + v} />\n              </svg>\n            </button>\n          ))}\n        </span>\n        <button\n          onClick={() => {\n            reset();\n            universe.pop_undo();\n          }}\n          style={{ fontSize: 35 }}\n        >\n          ↜\n        </button>\n        {Object.keys(Species).map(n =>\n          ElementButton(n, selectedElement, id =>\n            this.setState({ selectedElement: id })\n          )\n        )}\n\n        {this.state.currentSubmission && (\n          <div className=\"submission-title\">\n            <button onClick={() => this.incScore()}>\n              +♡{this.state.currentSubmission.data.score}{\" \"}\n            </button>\n            {this.state.currentSubmission.data.title}\n          </div>\n        )}\n\n        {this.state.submissionMenuOpen && (\n          <Menu close={() => this.closeMenu()}>\n            <h4>Share your creation with the people!</h4>\n            <img src={this.state.data.dataURL} className=\"submissionImg\" />\n            <div style={{ display: \"flex\" }}>\n              <input\n                placeholder=\"title\"\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <button\n                disabled={this.state.submitting}\n                onClick={() => this.submit()}\n              >\n                Submit\n              </button>\n            </div>\n          </Menu>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport { sizeMap, Index };\n","import { height, universe, width, ratio } from \"./index.js\";\nimport { sizeMap } from \"./components/ui\";\nconst canvas = document.getElementById(\"sand-canvas\");\n\nconst eventDistance = (a, b) => {\n  return Math.sqrt(\n    Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\n    2\n  );\n};\n\nconst magnitude = a => {\n  return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\n};\n\nconst norm = a => {\n  let mag = magnitude(a);\n  return { clientX: a.clientX / mag, clientY: a.clientY / mag };\n};\nconst scale = (a, s) => {\n  return { clientX: a.clientX * s, clientY: a.clientY * s };\n};\nconst add = (a, b) => {\n  return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\n};\nconst sub = (a, b) => {\n  return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\n};\n\nlet painting = false;\nlet lastPaint = null;\nlet repeat = null;\n\ncanvas.addEventListener(\"mousedown\", event => {\n  event.preventDefault();\n  universe.push_undo();\n  painting = true;\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  paint(event);\n  lastPaint = event;\n});\n\ndocument.body.addEventListener(\"mouseup\", event => {\n  clearInterval(repeat);\n  if (painting) {\n    event.preventDefault();\n    lastPaint = null;\n    painting = false;\n  }\n});\n\ncanvas.addEventListener(\"mousemove\", event => {\n  clearInterval(repeat);\n  smoothPaint(event);\n});\n\ncanvas.addEventListener(\"mouseleave\", event => {\n  clearInterval(repeat);\n  lastPaint = null;\n});\n\ncanvas.addEventListener(\"touchstart\", event => {\n  universe.push_undo();\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  painting = true;\n  lastPaint = event;\n  handleTouches(event);\n});\n\ncanvas.addEventListener(\"touchend\", event => {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  lastPaint = null;\n  painting = false;\n  clearInterval(repeat);\n});\n\ncanvas.addEventListener(\"touchmove\", event => {\n  if (!window.paused) {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  clearInterval(repeat);\n  handleTouches(event);\n});\n\nfunction smoothPaint(event) {\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  let startEvent = { clientX: event.clientX, clientY: event.clientY };\n  if (!painting) {\n    return;\n  }\n  let size = sizeMap[window.UI.state.size];\n  let i = 0;\n  paint(startEvent);\n  if (lastPaint) {\n    while (eventDistance(startEvent, lastPaint) > size / 3) {\n      let d = eventDistance(startEvent, lastPaint);\n      startEvent = add(\n        startEvent,\n        scale(norm(sub(lastPaint, event)), Math.min(size / 3, d))\n      );\n      i++;\n      if (i > 1000) {\n        break;\n      }\n      paint(startEvent);\n    }\n  }\n  lastPaint = event;\n}\n\nconst handleTouches = event => {\n  let touches = Array.from(event.touches);\n  if (touches.length == 1) {\n    smoothPaint(touches[0]);\n  } else {\n    touches.forEach(paint);\n  }\n};\n\nconst paint = event => {\n  if (!painting) {\n    return;\n  }\n  const boundingRect = canvas.getBoundingClientRect();\n\n  const scaleX =\n    canvas.width /\n    (ratio * Math.ceil(window.devicePixelRatio)) /\n    boundingRect.width;\n  const scaleY =\n    canvas.height /\n    (ratio * Math.ceil(window.devicePixelRatio)) /\n    boundingRect.height;\n\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\n\n  const x = Math.min(Math.floor(canvasLeft), width - 1);\n  const y = Math.min(Math.floor(canvasTop), height - 1);\n  if (window.UI.state.selectedElement < 0) return;\n  universe.paint(\n    x,\n    y,\n    sizeMap[window.UI.state.size],\n    window.UI.state.selectedElement\n  );\n};\n","import { Universe } from \"../crate/pkg\";\n\nimport { startWebGL } from \"./render\";\nimport { fps } from \"./fps\";\nimport {} from \"./paint\";\nimport {} from \"./app\";\n\nif (window.safari) {\n  history.pushState(null, null, location.href);\n  window.onpopstate = function(event) {\n    history.go(1);\n  };\n}\n\nfunction mobileAndTabletcheck() {\n  var check = false;\n  (function(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n}\n\nif (mobileAndTabletcheck()) {\n  window.onbeforeunload = function() {\n    return true;\n  };\n}\n\n// if (\"serviceWorker\" in navigator) {\n//   window.addEventListener(\"load\", () => {\n//     navigator.serviceWorker\n//       .register(\"/service-worker.js\")\n//       .then(registration => {\n//         console.log(\"SW registered: \", registration);\n//       })\n//       .catch(registrationError => {\n//         console.log(\"SW registration failed: \", registrationError);\n//       });\n//   });\n// }\n\nlet n = 300;\nconst universe = Universe.new(n, n);\nlet ratio = 2;\nlet width = n;\nlet height = n;\nconst canvas = document.getElementById(\"sand-canvas\");\n\ncanvas.height = n * ratio * Math.ceil(window.devicePixelRatio);\ncanvas.width = n * ratio * Math.ceil(window.devicePixelRatio);\n\ndocument.getElementById(\"background\").addEventListener(\"touchmove\", e => {\n  if (!window.paused) {\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n  }\n});\n\nconst ui = document.getElementById(\"ui\");\n\n// let resize = () => {\n//   let screen_width = window.innerWidth;\n//   let uiheight = 50;\n//   let screen_height = window.innerHeight - uiheight;\n\n//   let canvasStyle = \"\";\n//   let uiStyle = \"\";\n//   if (screen_width > screen_height) {\n//     if (screen_width - window.innerHeight < 400) {\n//       // landscape compressed\n\n//       canvasStyle = `height: ${window.innerHeight}px; margin:3px`;\n//       uiStyle = `width: ${screen_width -\n//         window.innerHeight -\n//         12}px; margin: 2px;`;\n//     } else {\n//       // landscape wide\n//       canvasStyle = `height: ${window.innerHeight}px`;\n//       uiStyle = `width: ${(screen_width - window.innerHeight) / 2 -\n//         7}px; margin: 2px;`;\n//     }\n//   } else {\n//     //portrait (mobile)\n//     canvasStyle = `width: ${screen_width}px; bottom:3px;`;\n//     uiStyle = \"\";\n//   }\n//   ui.style = uiStyle;\n//   canvas.style = canvasStyle;\n// };\n\n// resize();\n// window.addEventListener(\"deviceorientation\", resize, true);\n// window.addEventListener(\"resize\", resize);\n\nlet drawSand = startWebGL({ canvas, universe });\n\nconst renderLoop = () => {\n  if (!window.paused) {\n    fps.render(); // new\n    universe.tick();\n  }\n  drawSand();\n\n  window.animationId = requestAnimationFrame(renderLoop);\n};\n\nrenderLoop();\n\nfunction reset() {\n  universe.reset();\n}\nwindow.u = universe;\nwindow.universe = universe;\nexport { canvas, width, height, ratio, universe, reset };\n","import React from \"react\";\n\nconst Info = () => {\n  return (\n    <div className=\"Info\">\n      <h1>A sealed ecosystem simulation </h1>\n      <p>\n        Created by <a href=\"https://maxbittker.com\">max bittker</a>\n      </p>\n      forked from sandspiel\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Info from \"./components/info\";\nimport { Index } from \"./components/ui\";\nimport Menu from \"./components/menu\";\n\nlet sizeMap = [2, 5, 10, 18, 30, 45];\n\nfunction BrowseRouter({ match, location }) {\n  return (\n    <Menu>\n      <Browse location={location} />\n    </Menu>\n  );\n}\n\nfunction AdminRouter({ match, location }) {\n  return (\n    <Menu>\n      <Admin location={location} />\n    </Menu>\n  );\n}\n\nfunction SigninRouter({ match, location }) {\n  return (\n    <Menu>\n      <SignInScreen location={location} />\n    </Menu>\n  );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route path=\"/\" component={Index} />\n      <Route\n        exact\n        path=\"/info/\"\n        component={() => (\n          <Menu>\n            <Info />\n          </Menu>\n        )}\n      />\n      <Route path=\"/browse\" component={BrowseRouter} />\n      <Route path=\"/admin\" component={AdminRouter} />\n      <Route path=\"/login\" component={SigninRouter} />\n      <Route path=\"/__/auth/handler\" component={SigninRouter} />\n    </Router>\n  );\n}\n\nReactDOM.render(<AppRouter />, document.getElementById(\"ui\"));\n\nexport { sizeMap };\n","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nuniform float t;\\nuniform float dpi;\\nuniform vec2 resolution;\\nuniform bool isSnapshot;\\nuniform sampler2D backBuffer;\\nuniform sampler2D data;\\n\\nvarying vec2 uv;\\n\\n// clang-format off\\nvec3 hsv2rgb_3_0(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_1(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_1(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_2(vec4 x) {\\n     return mod289_1_1(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_3(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise_1_4(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D_1_5 = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_1_6 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_1_6;\\n  vec3 i1 = min( g_1_6.xyz, l.zxy );\\n  vec3 i2 = max( g_1_6.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D_1_5.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_1_1(i);\\n  vec4 p = permute_1_2( permute_1_2( permute_1_2(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D_1_5.wyz - D_1_5.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1_1_7 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0_1_8 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1_1_7.xy,h.z);\\n  vec3 p3 = vec3(a1_1_7.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt_1_3(vec4(dot(p0_1_8,p0_1_8), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0_1_8 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0_1_8,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_2_9(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289_2_9(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute_2_10(vec3 x) {\\n  return mod289_2_9(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise_2_11(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289_2_9(i); // Avoid truncation effects in permutation\\n  vec3 p = permute_2_10( permute_2_10( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\n\\n\\nhighp float random_4_12(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\n// clang-format on\\n\\nvoid main() {\\n  vec3 color;\\n  //   float r = abs(sin(t / 25.));\\n  //   if (length(uv) < r && length(uv) > r - 0.1) {\\n  // color = hsv2rgb(vec3(sin(t * 0.01), 0.5, 0.5));\\n\\n  vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\\n  // vec3 bb = texture2D(backBuffer, (uv * 0.5) + vec2(0.5)).rgb;\\n\\n  vec4 data = texture2D(data, textCoord);\\n  int type = int((data.r * 255.) + 0.1);\\n  float hue = 0.0;\\n  float saturation = 0.6;\\n  float lightness = 0.3 + data.g * 0.5;\\n  float noise = snoise_1_4(vec3(floor(uv * resolution / dpi), t * 0.05));\\n  float a = 1.0;\\n\\n  if (type == 0) {\\n    hue = 0.0;\\n    saturation = 0.1;\\n    lightness = 0.1;\\n    a = 0.2;\\n    if (isSnapshot) {\\n      saturation = 0.05;\\n      lightness = 1.01;\\n      a = 1.0;\\n    }\\n  } else if (type == 1) {\\n    hue = 0.1;\\n    saturation = 0.1;\\n    lightness = 0.4;\\n  } else if (type == 2) {\\n    hue = 0.1;\\n    saturation = 0.5;\\n    lightness += 0.3;\\n  } else if (type == 3) { // water\\n    hue = 0.6;\\n    lightness = 0.7 + data.g * 0.25 + noise * 0.1;\\n  } else if (type == 4) { // gas\\n    hue = 0.0;\\n    lightness += 0.4;\\n    saturation = 0.2 + (data.b * 1.5);\\n  } else if (type == 5) { // clone\\n    hue = 0.9;\\n    saturation = 0.3;\\n  } else if (type == 6) { // fire\\n    hue = (data.g * 0.1);\\n    saturation = 0.7;\\n\\n    lightness = 0.7 + (data.g * 0.3) + ((noise + 0.8) * 0.5);\\n  } else if (type == 7) { // wood\\n    hue = (data.g * 0.1);\\n    saturation = 0.3;\\n    lightness = 0.3 + data.g * 0.3;\\n  } else if (type == 8) { // lava\\n    hue = (data.g * 0.1);\\n    lightness = 0.7 + data.g * 0.25 + noise * 0.1;\\n  } else if (type == 9) { // ice\\n    hue = 0.6;\\n    saturation = 0.4;\\n    lightness = 0.7 + data.g * 0.5;\\n  } else if (type == 10) { // sink\\n    hue = 0.9;\\n    saturation = 0.4;\\n    lightness = 1.0;\\n  } else if (type == 11) { // plant\\n    hue = 0.4;\\n    saturation = 0.4;\\n  } else if (type == 12) { // acid\\n    hue = 0.18;\\n    saturation = 0.9;\\n    lightness = 0.8 + data.g * 0.2 + noise * 0.05;\\n  } else if (type == 13) { // stone\\n    hue = -0.4 + (data.g * 0.5);\\n    saturation = 0.1;\\n    // lightness = 0.2 + data.g * 0.5;\\n  } else if (type == 14) { // dust\\n    hue = (data.g * 2.0) + t * .0008;\\n    saturation = 0.4;\\n    lightness = 0.8;\\n  } else if (type == 15) { // mite\\n    hue = 0.8;\\n    saturation = 0.9;\\n    lightness = 0.8;\\n  } else if (type == 16) { // oil\\n    hue = (data.g * 5.0) + t * .008;\\n\\n    saturation = 0.2;\\n    lightness = 0.3;\\n  } else if (type == 17) { // Rocket\\n    hue = 0.0;\\n    saturation = 0.4 + data.b;\\n    lightness = 0.9;\\n  } else if (type == 18) { // fungus\\n    hue = (data.g * 0.15) - 0.1;\\n    saturation = (data.g * 0.8) - 0.05;\\n\\n    // (data.g * 0.00);\\n    lightness = 1.5 - (data.g * 0.2);\\n  } else if (type == 19) { // seed/flower\\n\\n    hue = fract(fract(data.b * 2.) * 0.5) - 0.3;\\n    saturation = 0.7 * (data.g + 0.4) + data.b * 0.2;\\n    lightness = 0.9 * (data.g + 0.9);\\n  }\\n  if (isSnapshot == false) {\\n    lightness *= (0.975 + snoise_2_11(floor(uv * resolution / dpi)) * 0.025);\\n  }\\n  color = hsv2rgb_3_0(vec3(hue, saturation, lightness));\\n  gl_FragColor = vec4(color, a);\\n}\"","module.exports = \"\\n// boring \\\"pass-through\\\" vertex shader\\nprecision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\nvoid main() {\\n  uv = position;\\n  gl_Position = vec4(position, 0, 1);\\n}\"","import * as wasm from './sandtable_bg';\n\n/**\n*/\nexport const Species = Object.freeze({ Empty:0,Wall:1,Sand:2,Water:3,Stone:13,Shrimp:4,Mite:15,Plant:11,Seed:19,Dust:14, });\n\nexport function __wbg_random_58bd29ed438c19c0() {\n    return Math.random();\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\nfunction freeCell(ptr) {\n\n    wasm.__wbg_cell_free(ptr);\n}\n/**\n*/\nexport class Cell {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeCell(ptr);\n    }\n\n}\n\nfunction freeUniverse(ptr) {\n\n    wasm.__wbg_universe_free(ptr);\n}\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeUniverse(ptr);\n    }\n\n    /**\n    * @returns {void}\n    */\n    reset() {\n        return wasm.universe_reset(this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    tick() {\n        return wasm.universe_tick(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        return wasm.universe_width(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        return wasm.universe_height(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        return wasm.universe_cells(this.ptr);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} size\n    * @param {number} species\n    * @returns {void}\n    */\n    paint(x, y, size, species) {\n        return wasm.universe_paint(this.ptr, x, y, size, species);\n    }\n    /**\n    * @returns {void}\n    */\n    push_undo() {\n        return wasm.universe_push_undo(this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    pop_undo() {\n        return wasm.universe_pop_undo(this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    flush_undos() {\n        return wasm.universe_flush_undos(this.ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        return Universe.__wrap(wasm.universe_new(width, height));\n    }\n}\n\nfunction freeWind(ptr) {\n\n    wasm.__wbg_wind_free(ptr);\n}\n/**\n*/\nexport class Wind {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeWind(ptr);\n    }\n\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nexport function __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n"],"sourceRoot":""}