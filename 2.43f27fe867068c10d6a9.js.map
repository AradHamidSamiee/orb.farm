{"version":3,"sources":["webpack:///./js/render.js","webpack:///./js/fps.js","webpack:///./js/components/menu.js","webpack:///./js/components/ui.js","webpack:///./js/paint.js","webpack:///./js/components/info.js","webpack:///./js/app.js","webpack:///./js/index.js","webpack:///./js/glsl/sand.glsl","webpack:///./js/glsl/sandVertex.glsl","webpack:///./crate/pkg/sandtable.js","webpack:///./js/setup.js"],"names":["reglBuilder","require","window","memory","fsh","vsh","startWebGL","canvas","universe","isSnapshot","regl","attributes","preserveDrawingBuffer","width","height","cell_pointer","cells","light_pointer","lights","Uint8Array","buffer","dataTexture","texture","data","lightTexture","drawSand","blend","enable","func","srcRGB","srcAlpha","dstRGB","dstAlpha","equation","rgb","alpha","color","frag","uniforms","t","tick","light","resolution","viewportWidth","viewportHeight","dpi","devicePixelRatio","vert","position","count","poll","fps","this","document","getElementById","frames","lastFrameTimeStamp","performance","now","delta","push","length","shift","min","Infinity","max","sum","i","Math","mean","textContent","round","u","O2","CO2","Menu","close","children","className","to","onClick","species","Species","pallette_data","createElement","Object","values","range","Universe","reset","forEach","id","paint","render","ctx","getContext","readPixels","RGBA","UNSIGNED_BYTE","colors","index","pallette","sizeMap","Index","props","state","submissionMenuOpen","paused","submitting","size","dataURL","currentSubmission","selectedElement","Water","UI","load","React","Component","prevProps","location","pathname","pause","hash","setState","event","preventDefault","confirm","play","toDataURL","snapshot","context","imgData","createImageData","putImageData","cellData","title","payload","image","fetch","functions","_url","method","body","JSON","stringify","headers","then","res","json","response","console","log","error","replace","storage","refFromURL","getDownloadURL","dlurl","blob","url","URL","createObjectURL","img","Image","src","onload","drawImage","getImageData","cellsData","flush_undos","push_undo","Fragment","togglePause","viewBox","points","map","v","key","e","setSize","style","padding","cx","cy","r","pop_undo","fontSize","keys","filter","name","includes","n","setElement","elementID","selected","background","backgroundColor","ElementButton","incScore","score","closeMenu","display","placeholder","onChange","target","value","disabled","submit","eventDistance","a","b","sqrt","pow","clientX","clientY","norm","mag","magnitude","scale","s","add","sub","painting","lastPaint","repeat","smoothPaint","clearInterval","setInterval","startEvent","d","addEventListener","cancelable","handleTouches","touches","Array","from","boundingRect","getBoundingClientRect","scaleX","ratio","ceil","scaleY","canvasLeft","left","canvasTop","top","x","floor","y","Info","href","BrowseRouter","match","Browse","AdminRouter","Admin","SigninRouter","SignInScreen","ReactDOM","path","component","exact","h","Glass","Wood","Air","Sand","Zoop","Bacteria","Seed","Algae","ui","resize","screen_width","innerWidth","canvasStyle","uiStyle","innerHeight","renderLoop","animationId","requestAnimationFrame","module","exports","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getStringFromWasm","ptr","len","decode","wasm","subarray","what","freeze","Plant","Egg","Fish","FishTail","Nitrogen","Waste","Stone","obj","create","prototype","ret","__wrap","__wbg_random_09364f2d8647f133","random","Error","__wbindgen_throw","arg0","arg1","check","safari","history","pushState","onpopstate","go","navigator","userAgent","vendor","opera","test","substr","onbeforeunload"],"mappings":"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","file":"2.43f27fe867068c10d6a9.js","sourcesContent":["const reglBuilder = require(\"regl\");\nimport { memory } from \"../crate/pkg/sandtable_bg\";\nwindow.memory = memory;\nimport { Species } from \"../crate/pkg/sandtable\";\nimport { Universe } from \"../crate/pkg\";\n\nlet fsh = require(\"./glsl/sand.glsl\");\nlet vsh = require(\"./glsl/sandVertex.glsl\");\n\nlet startWebGL = ({ canvas, universe, isSnapshot = false }) => {\n  const regl = reglBuilder({\n    canvas,\n    attributes: { preserveDrawingBuffer: isSnapshot }\n  });\n  // const lastFrame = regl.texture();\n  const width = universe.width();\n  const height = universe.height();\n  let cell_pointer = universe.cells();\n  let light_pointer = universe.lights();\n  let cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n  let lights = new Uint8Array(memory.buffer, light_pointer, width * height * 4);\n  const dataTexture = regl.texture({ width, height, data: cells });\n  const lightTexture = regl.texture({ width, height, data: lights });\n\n  let drawSand = regl({\n    blend: {\n      enable: true,\n      func: {\n        srcRGB: \"src alpha\",\n        srcAlpha: 1,\n        dstRGB: \"one minus src alpha\",\n        dstAlpha: 1\n      },\n      equation: {\n        rgb: \"add\",\n        alpha: \"add\"\n      },\n      color: [0, 0, 0, 0]\n    },\n    frag: fsh,\n    uniforms: {\n      t: ({ tick }) => tick,\n      data: () => {\n        cell_pointer = universe.cells();\n        cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n\n        return dataTexture({ width, height, data: cells });\n      },\n      light: () => {\n        light_pointer = universe.lights();\n\n        lights = new Uint8Array(\n          memory.buffer,\n          light_pointer,\n          width * height * 4\n        );\n\n        return lightTexture({ width, height, data: lights });\n      },\n      resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight\n      ],\n      dpi: window.devicePixelRatio * 2,\n      isSnapshot\n      // backBuffer: lastFrame\n    },\n\n    vert: vsh,\n    attributes: {\n      // Full screen triangle\n      position: [[-1, 4], [-1, -1], [4, -1]]\n    },\n    // Our triangle has 3 vertices\n    count: 3\n  });\n\n  return () => {\n    regl.poll();\n    drawSand();\n  };\n};\n\nlet snapshot = universe => {\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = universe.width() / 2;\n  canvas.height = universe.height() / 2;\n  let render = startWebGL({ universe, canvas, isSnapshot: true });\n  render();\n\n  return canvas.toDataURL(\"image/png\");\n};\n\nlet pallette = () => {\n  let canvas = document.createElement(\"canvas\");\n\n  let species = Object.values(Species);\n  let range = Math.max(...species) + 1;\n  let universe = Universe.new(range, 1);\n  canvas.width = range;\n  canvas.height = 3;\n  universe.reset();\n\n  species.forEach(id => universe.paint(id, 0, 2, id));\n\n  let render = startWebGL({ universe, canvas, isSnapshot: true });\n  render();\n  let ctx = canvas.getContext(\"webgl\");\n  let data = new Uint8Array(range * 4);\n  ctx.readPixels(0, 0, range, 1, ctx.RGBA, ctx.UNSIGNED_BYTE, data);\n  let colors = {};\n  species.forEach(id => {\n    let index = id * 4;\n    let color = `rgba(${data[index]},${data[index + 1]}, ${\n      data[index + 2]\n    }, 1.0)`;\n    colors[id] = color;\n  });\n  return colors;\n};\n\nexport { startWebGL, snapshot, pallette };\n","const fps = new (class {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render() {\n    // Convert the delta time since the last frame render into a measure\n    // of frames per second.\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = (1 / delta) * 1000;\n\n    // Save only the latest 100 timings.\n    this.frames.push(fps);\n    if (this.frames.length > 30) {\n      this.frames.shift();\n    }\n\n    // Find the max, min, and mean of our 100 latest timings.\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    // Render the statistics.\n    this.fps.textContent = `FPS:${Math.round(mean)}\n    O2: ${window.u.O2()}\n    CO2: ${window.u.CO2()}\n    `;\n  }\n})();\n\nexport { fps };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = ({ close, children }) => {\n  return (\n    <div className=\"menu-scrim\">\n      <div className={\"menu\"}>\n        {children}\n        <Link to=\"/\" className=\"x\" onClick={close}>\n          <button> x</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Menu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { memory } from \"../../crate/pkg/sandtable_bg\";\nimport { Species } from \"../../crate/pkg/sandtable\";\n\nimport { height, universe, width, reset } from \"../index.js\";\nimport { snapshot, pallette } from \"../render.js\";\n\nimport Menu from \"./menu\";\n\nwindow.species = Species;\nlet pallette_data = pallette();\n\nconst ElementButton = (name, selectedElement, setElement) => {\n  let elementID = Species[name];\n\n  let color = pallette_data[elementID];\n  let selected = elementID == selectedElement;\n\n  let background = \"inherit\";\n\n  return (\n    <button\n      className={selected ? \"selected\" : \"\"}\n      key={name}\n      onClick={() => {\n        setElement(elementID);\n      }}\n      style={{\n        background,\n        backgroundColor: color,\n        filter: selected || `saturate(0.5) `\n      }}\n    >\n      {\"  \"}\n      {name}\n      {\"  \"}\n    </button>\n  );\n};\n\nlet sizeMap = [2, 5, 10];\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissionMenuOpen: false,\n      paused: false,\n      submitting: false,\n      size: 1,\n      dataURL: {},\n      currentSubmission: null,\n      selectedElement: Species.Water\n    };\n    window.UI = this;\n\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname === \"/\" &&\n      prevProps.location.pathname !== \"/\" &&\n      this.state.currentSubmission\n    ) {\n      window.location = `#${this.state.currentSubmission.id}`;\n      return;\n    }\n    if (\n      this.props.location.pathname !== \"/\" &&\n      prevProps.location.pathname == \"/\"\n    ) {\n      this.pause();\n    }\n    if (\n      prevProps.location.hash === \"\" ||\n      prevProps.location.hash != this.props.location.hash\n    ) {\n      this.load();\n    }\n  }\n  togglePause() {\n    window.paused = !this.state.paused;\n    this.setState({ paused: !this.state.paused });\n  }\n  play() {\n    window.paused = false;\n    this.setState({ paused: false });\n  }\n  pause() {\n    window.paused = true;\n    this.setState({ paused: true });\n  }\n\n  setSize(event, size) {\n    event.preventDefault();\n    this.setState({\n      size\n    });\n  }\n  reset() {\n    if (window.confirm(\"Reset?\")) {\n      this.play();\n      window.location = \"#\";\n      this.setState({ currentSubmission: null });\n      reset();\n    }\n  }\n  menu() {\n    this.pause();\n    this.setState({ submissionMenuOpen: true });\n  }\n\n  closeMenu() {\n    this.play();\n    this.setState({ submissionMenuOpen: false });\n  }\n  upload() {\n    let dataURL = snapshot(universe);\n    const cells = new Uint8Array(\n      memory.buffer,\n      universe.cells(),\n      width * height * 4\n    );\n\n    // Create canvas\n    let canvas = document.createElement(\"canvas\"),\n      context = canvas.getContext(\"2d\"),\n      imgData = context.createImageData(width, height);\n\n    canvas.height = height;\n    canvas.width = width;\n\n    // fill imgData with data from cells\n    for (var i = 0; i < width * height * 4; i++) {\n      if (i % 4 == 3) {\n        imgData.data[i] = 255;\n      } else {\n        imgData.data[i] = cells[i];\n      }\n    }\n    // put data to context at (0, 0)\n    context.putImageData(imgData, 0, 0);\n\n    let cellData = canvas.toDataURL(\"image/png\");\n\n    this.pause();\n    this.setState({\n      data: { dataURL, cells: cellData },\n      submissionMenuOpen: true\n    });\n  }\n  submit() {\n    let { title, data } = this.state;\n    let { dataURL, cells } = data;\n    let payload = { title, image: dataURL, cells };\n    this.setState({ submitting: true });\n\n    fetch(functions._url(\"api/creations\"), {\n      method: \"POST\",\n      body: JSON.stringify(payload), // data can be `string` or {object}!\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(\"Success:\", JSON.stringify(response));\n        this.play();\n      })\n      .catch(error => console.error(\"Error:\", error))\n      .then(() => {\n        this.setState({ submissionMenuOpen: false, submitting: false });\n      });\n  }\n\n  load() {\n    let { location } = this.props;\n    let id = location.hash.replace(/#/, \"\");\n    if (id === \"\") {\n      return;\n    }\n\n    if (this.state.currentSubmission && this.state.currentSubmission.id == id) {\n      return;\n    }\n\n    fetch(functions._url(`api/creations/${id}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        storage\n          .refFromURL(\n            `gs://sandtable-8d0f7.appspot.com/creations/${data.id}.data.png`\n          )\n          .getDownloadURL()\n          .then(dlurl => {\n            fetch(dlurl, {\n              method: \"GET\"\n            })\n              .then(res => res.blob())\n              .then(blob => {\n                // console.log(response);\n                this.setState({ currentSubmission: { id, data } });\n\n                var url = URL.createObjectURL(blob);\n                var img = new Image();\n                img.src = url;\n                img.onload = () => {\n                  var canvas = document.createElement(\"canvas\");\n                  canvas.width = width;\n                  canvas.height = height;\n                  var ctx = canvas.getContext(\"2d\");\n                  ctx.drawImage(img, 0, 0);\n                  var imgData = ctx.getImageData(\n                    0,\n                    0,\n                    canvas.width,\n                    canvas.height\n                  );\n\n                  const cellsData = new Uint8Array(\n                    memory.buffer,\n                    universe.cells(),\n                    width * height * 4\n                  );\n\n                  reset();\n\n                  for (var i = 0; i < width * height * 4; i++) {\n                    cellsData[i] = imgData.data[i];\n                  }\n                  universe.flush_undos();\n                  universe.push_undo();\n                  this.pause();\n                };\n              })\n              .catch(error => console.error(\"Error:\", error));\n          });\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  render() {\n    let { size, paused, selectedElement, currentSubmission } = this.state;\n    let hash =\n      currentSubmission && currentSubmission.id\n        ? `#${currentSubmission.id}`\n        : \"\";\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.togglePause()}\n          className={paused ? \"selected\" : \"\"}\n        >\n          {paused ? (\n            <svg height=\"20\" width=\"20\" id=\"d\" viewBox=\"0 0 300 300\">\n              <polygon id=\"play\" points=\"0,0 , 300,150 0,300\" />\n            </svg>\n          ) : (\n            <svg height=\"20\" width=\"20\" id=\"d\" viewBox=\"0 0 300 300\">\n              <polygon id=\"bar2\" points=\"0,0 110,0 110,300 0,300\" />\n              <polygon id=\"bar1\" points=\"190,0 300,0 300,300 190,300\" />\n            </svg>\n          )}\n        </button>\n        {/* <button onClick={() => this.upload()}>Upload</button> */}\n\n        <button onClick={() => this.reset()}>Reset</button>\n        <Link\n          to={{\n            pathname: \"/info/\",\n            hash\n          }}\n        >\n          <button>Info</button>\n        </Link>\n\n        {/* {paused && <button onClick={() => universe.tick()}>Tick</button>} */}\n        <span className=\"sizes\">\n          {sizeMap.map((v, i) => (\n            <button\n              key={i}\n              className={i == size ? \"selected\" : \"\"}\n              onClick={e => this.setSize(e, i)}\n              style={{ padding: \"0px\" }}\n            >\n              <svg height=\"23\" width=\"23\" id=\"d\" viewBox=\"0 0 100 100\">\n                <circle cx=\"50\" cy=\"50\" r={2 + v * 3} />\n              </svg>\n            </button>\n          ))}\n        </span>\n        <button\n          onClick={() => {\n            reset();\n            universe.pop_undo();\n          }}\n          style={{ fontSize: 35 }}\n        >\n          ↜\n        </button>\n        {Object.keys(Species)\n          .filter(name => ![\"Plant\", \"FishTail\"].includes(name))\n          .map(n =>\n            ElementButton(n, selectedElement, id =>\n              this.setState({ selectedElement: id })\n            )\n          )}\n\n        {this.state.currentSubmission && (\n          <div className=\"submission-title\">\n            <button onClick={() => this.incScore()}>\n              +♡{this.state.currentSubmission.data.score}{\" \"}\n            </button>\n            {this.state.currentSubmission.data.title}\n          </div>\n        )}\n\n        {this.state.submissionMenuOpen && (\n          <Menu close={() => this.closeMenu()}>\n            <h4>Share your creation with the people!</h4>\n            <img src={this.state.data.dataURL} className=\"submissionImg\" />\n            <div style={{ display: \"flex\" }}>\n              <input\n                placeholder=\"title\"\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <button\n                disabled={this.state.submitting}\n                onClick={() => this.submit()}\n              >\n                Submit\n              </button>\n            </div>\n          </Menu>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport { sizeMap, Index };\n","import { height, universe, width, ratio } from \"./index.js\";\nimport { sizeMap } from \"./components/ui\";\nconst canvas = document.getElementById(\"sand-canvas\");\n\nconst eventDistance = (a, b) => {\n  return Math.sqrt(\n    Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\n    2\n  );\n};\n\nconst magnitude = a => {\n  return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\n};\n\nconst norm = a => {\n  let mag = magnitude(a);\n  return { clientX: a.clientX / mag, clientY: a.clientY / mag };\n};\nconst scale = (a, s) => {\n  return { clientX: a.clientX * s, clientY: a.clientY * s };\n};\nconst add = (a, b) => {\n  return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\n};\nconst sub = (a, b) => {\n  return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\n};\n\nlet painting = false;\nlet lastPaint = null;\nlet repeat = null;\n\ncanvas.addEventListener(\"mousedown\", event => {\n  event.preventDefault();\n  universe.push_undo();\n  painting = true;\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  paint(event);\n  lastPaint = event;\n});\n\ndocument.body.addEventListener(\"mouseup\", event => {\n  clearInterval(repeat);\n  if (painting) {\n    event.preventDefault();\n    lastPaint = null;\n    painting = false;\n  }\n});\n\ncanvas.addEventListener(\"mousemove\", event => {\n  clearInterval(repeat);\n  smoothPaint(event);\n});\n\ncanvas.addEventListener(\"mouseleave\", event => {\n  clearInterval(repeat);\n  lastPaint = null;\n});\n\ncanvas.addEventListener(\"touchstart\", event => {\n  universe.push_undo();\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  painting = true;\n  lastPaint = event;\n  handleTouches(event);\n});\n\ncanvas.addEventListener(\"touchend\", event => {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  lastPaint = null;\n  painting = false;\n  clearInterval(repeat);\n});\n\ncanvas.addEventListener(\"touchmove\", event => {\n  if (!window.paused) {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  clearInterval(repeat);\n  handleTouches(event);\n});\n\nfunction smoothPaint(event) {\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  let startEvent = { clientX: event.clientX, clientY: event.clientY };\n  if (!painting) {\n    return;\n  }\n  let size = sizeMap[window.UI.state.size];\n  let i = 0;\n  paint(startEvent);\n  if (lastPaint) {\n    while (eventDistance(startEvent, lastPaint) > size / 3) {\n      let d = eventDistance(startEvent, lastPaint);\n      startEvent = add(\n        startEvent,\n        scale(norm(sub(lastPaint, event)), Math.min(size / 3, d))\n      );\n      i++;\n      if (i > 1000) {\n        break;\n      }\n      paint(startEvent);\n    }\n  }\n  lastPaint = event;\n}\n\nconst handleTouches = event => {\n  let touches = Array.from(event.touches);\n  if (touches.length == 1) {\n    smoothPaint(touches[0]);\n  } else {\n    touches.forEach(paint);\n  }\n};\n\nconst paint = event => {\n  if (!painting) {\n    return;\n  }\n  const boundingRect = canvas.getBoundingClientRect();\n\n  const scaleX =\n    canvas.width /\n    (ratio * Math.ceil(window.devicePixelRatio)) /\n    boundingRect.width;\n  const scaleY =\n    canvas.height /\n    (ratio * Math.ceil(window.devicePixelRatio)) /\n    boundingRect.height;\n\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\n\n  const x = Math.min(Math.floor(canvasLeft), width - 1);\n  const y = Math.min(Math.floor(canvasTop), height - 1);\n  if (window.UI.state.selectedElement < 0) return;\n  universe.paint(\n    x,\n    y,\n    sizeMap[window.UI.state.size],\n    window.UI.state.selectedElement\n  );\n};\n","import React from \"react\";\n\nconst Info = () => {\n  return (\n    <div className=\"Info\">\n      <h1>A sealed ecosystem simulation </h1>\n      <p>\n        Created by <a href=\"https://maxbittker.com\">max bittker</a>\n      </p>\n      forked from sandspiel\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Info from \"./components/info\";\nimport { Index } from \"./components/ui\";\nimport Menu from \"./components/menu\";\n\nfunction BrowseRouter({ match, location }) {\n  return (\n    <Menu>\n      <Browse location={location} />\n    </Menu>\n  );\n}\n\nfunction AdminRouter({ match, location }) {\n  return (\n    <Menu>\n      <Admin location={location} />\n    </Menu>\n  );\n}\n\nfunction SigninRouter({ match, location }) {\n  return (\n    <Menu>\n      <SignInScreen location={location} />\n    </Menu>\n  );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route path=\"/\" component={Index} />\n      <Route\n        exact\n        path=\"/info/\"\n        component={() => (\n          <Menu>\n            <Info />\n          </Menu>\n        )}\n      />\n      <Route path=\"/browse\" component={BrowseRouter} />\n      <Route path=\"/admin\" component={AdminRouter} />\n      <Route path=\"/login\" component={SigninRouter} />\n      <Route path=\"/__/auth/handler\" component={SigninRouter} />\n    </Router>\n  );\n}\n\nReactDOM.render(<AppRouter />, document.getElementById(\"ui\"));\n","import { Universe, Species } from \"../crate/pkg\";\n\nimport { startWebGL } from \"./render\";\nimport { fps } from \"./fps\";\nimport {} from \"./paint\";\nimport {} from \"./app\";\nimport {} from \"./setup\";\n\nlet n = 200;\nlet h = n / 2;\nlet d = n - 6;\n\nconst universe = Universe.new(n, n);\nuniverse.paint(h, h, d + 2, Species.Glass);\n\nuniverse.paint(h - 10, d + 2, 10, Species.Wood);\nuniverse.paint(h + 10, d + 2, 10, Species.Wood);\nuniverse.paint(h, h, d - 2, Species.Air);\n// for (var x = -50; x <= 49; x += 1) {\n//   universe.paint(h + x, h + 49, 204, Species.Glass);\n//   universe.paint(h + x, h + 49, 200, Species.Air);\n\n//   universe.paint(h + x, h - 50, 204, Species.Glass);\n//   universe.paint(h + x, h - 50, 200, Species.Air);\n\n//   universe.paint(h - 50, h + x, 204, Species.Glass);\n//   universe.paint(h - 50, h + x, 200, Species.Air);\n\n//   universe.paint(h + 49, h + x, 204, Species.Glass);\n//   universe.paint(h + 49, h + x, 200, Species.Air);\n// }\n// universe.paint(h, h, 299, Species.Air);\nfor (var x = 30; x < d - 30; x += 10) {\n  universe.paint(x, h * 1.2, h, Species.Water);\n}\n\nfor (var x = 0; x < d; x += 10) {\n  universe.paint(x, d * 0.75, 20, Species.Sand);\n}\nuniverse.paint(h, h, h * 1.1, Species.Water);\n\nuniverse.paint(h, h, 2, Species.Zoop);\n// universe.paint(h + 20, h, 2, Species.Fish);\nuniverse.paint(h, h * 1.2, 2, Species.Bacteria);\nuniverse.paint(h * 1.5, h * 1.2, 2, Species.Seed);\n\nuniverse.paint(h, h, 10, Species.Algae);\n\n// universe.paint(150, 50, 25, Species.Seed);\nlet ratio = 2;\nlet width = n;\nlet height = n;\nconst canvas = document.getElementById(\"sand-canvas\");\n\ncanvas.height = n * ratio * Math.ceil(window.devicePixelRatio);\ncanvas.width = n * ratio * Math.ceil(window.devicePixelRatio);\n\ndocument.getElementById(\"background\").addEventListener(\"touchmove\", e => {\n  if (!window.paused) {\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n  }\n});\n\nconst ui = document.getElementById(\"ui\");\n\nlet resize = () => {\n  let screen_width = window.innerWidth;\n  let uiheight = 50;\n  let screen_height = window.innerHeight - uiheight;\n\n  let canvasStyle = \"\";\n  let uiStyle = \"\";\n  if (screen_width > screen_height) {\n    if (screen_width - window.innerHeight < 400) {\n      // landscape compressed\n      canvasStyle = `height: ${window.innerHeight}px; margin:3px`;\n      uiStyle = `width: ${screen_width -\n        window.innerHeight -\n        12}px; margin: 2px;`;\n    } else {\n      // landscape wide\n      canvasStyle = `height: ${window.innerHeight}px`;\n      uiStyle = `width: ${(screen_width - window.innerHeight) / 2 -\n        7}px; margin: 2px;`;\n    }\n  } else {\n    //portrait (mobile)\n    canvasStyle = `width: ${screen_width}px; `;\n    uiStyle = \"\";\n  }\n  ui.style = uiStyle;\n  canvas.style = canvasStyle;\n};\n\nresize();\nwindow.addEventListener(\"deviceorientation\", resize, true);\nwindow.addEventListener(\"resize\", resize);\n\nlet drawSand = startWebGL({ canvas, universe });\n// let light = startLight({ universe });\nconst renderLoop = () => {\n  if (!window.paused) {\n    fps.render(); // new\n    universe.tick();\n    // light.update();\n  }\n  drawSand();\n\n  window.animationId = requestAnimationFrame(renderLoop);\n};\n\nfunction reset() {\n  universe.reset();\n}\nwindow.u = universe;\nwindow.universe = universe;\nrenderLoop();\n\nexport { canvas, width, height, ratio, universe, reset };\n","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nuniform float t;\\nuniform float dpi;\\nuniform vec2 resolution;\\nuniform bool isSnapshot;\\nuniform sampler2D backBuffer;\\nuniform sampler2D data;\\nuniform sampler2D light;\\n\\nvarying vec2 uv;\\n\\n// clang-format off\\nvec3 hsv2rgb_4_0(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_2_1(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_2_1(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_2_2(vec4 x) {\\n     return mod289_2_1(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_2_3(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise_2_4(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D_2_5 = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_2_6 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_2_6;\\n  vec3 i1 = min( g_2_6.xyz, l.zxy );\\n  vec3 i2 = max( g_2_6.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D_2_5.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_2_1(i);\\n  vec4 p = permute_2_2( permute_2_2( permute_2_2(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D_2_5.wyz - D_2_5.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1_2_7 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0_2_8 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1_2_7.xy,h.z);\\n  vec3 p3 = vec3(a1_2_7.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt_2_3(vec4(dot(p0_2_8,p0_2_8), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0_2_8 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0_2_8,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_9(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289_1_9(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute_1_10(vec3 x) {\\n  return mod289_1_9(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise_1_11(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289_1_9(i); // Avoid truncation effects in permutation\\n  vec3 p = permute_1_10( permute_1_10( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\n\\n\\nhighp float random_3_12(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\n// clang-format on\\n\\nvoid main() {\\n  vec3 color;\\n  vec2 grid = floor(uv * resolution / dpi);\\n  //   float r = abs(sin(t / 25.));\\n  //   if (length(uv) < r && length(uv) > r - 0.1) {\\n  // color = hsv2rgb(vec3(sin(t * 0.01), 0.5, 0.5));\\n  float noise = snoise_2_4(vec3(grid, t * 0.05));\\n\\n  vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\\n  vec2 sampleCoord =\\n      (uv * vec2(0.5, -0.5)) + vec2(0.5) + vec2(noise, 0.0) / resolution;\\n  // vec3 bb = texture2D(backBuffer, (uv * 0.5) + vec2(0.5)).rgb;\\n\\n  vec4 data = texture2D(data, textCoord);\\n  float lightValue = texture2D(light, textCoord).r;\\n  float sampleLightValue = texture2D(light, sampleCoord).r;\\n  lightValue = 0.5 * lightValue + 0.5 * sampleLightValue;\\n  int type = int((data.r * 255.) + 0.1);\\n  float energy = data.g;\\n  float age = data.b;\\n\\n  float hue = 0.0;\\n  float saturation = 0.6;\\n  float lightness = 0.3 + energy * 0.5;\\n  float a = 1.0;\\n  float brightness = 0.0;\\n\\n  if (type == 0) { // Air\\n\\n    hue = 0.0;\\n    saturation = 0.1;\\n    lightness = 0.1;\\n    a = 0.0;\\n    if (isSnapshot) {\\n      saturation = 0.05;\\n      lightness = 1.01;\\n      a = 1.0;\\n    }\\n\\n  } else if (type == 1) { // Glass\\n    hue = 0.1;\\n    saturation = 0.1;\\n    lightness = 0.5;\\n  } else if (type == 2) { // Sand\\n    hue = 0.1;\\n    saturation = 0.2 + energy;\\n    lightness = 1.5 - energy;\\n\\n  } else if (type == 3) { // Water\\n    hue = 0.58;\\n    saturation = 0.6;\\n    lightness = 0.5 + energy * 0.25 + noise * 0.1;\\n    a = 0.4;\\n    if (isSnapshot) {\\n      a = 1.0;\\n    }\\n  } else if (type == 4) { // Algae\\n    hue = 0.4 - age * 0.5;\\n    lightness += 0.0;\\n    saturation = 0.4 + (age * .2);\\n  } else if (type == 5) { // Plant\\n    hue = 0.4;\\n    lightness -= 0.1;\\n    saturation = 0.4;\\n  } else if (type == 6) { // Zoop\\n    hue = 0.9;\\n    lightness += 0.7;\\n  } else if (type == 7) { // Fish\\n    hue = 0.0;\\n    lightness += 0.4;\\n  } else if (type == 8) { // Bacteria\\n    hue = 0.9;\\n    saturation -= 0.2;\\n    lightness -= 0.1;\\n  } else if (type == 9) { // ???\\n    hue = 0.6;\\n    saturation = 0.4;\\n    lightness = 0.7 + data.g * 0.5;\\n  } else if (type == 10) { // Waste\\n    hue = 0.9;\\n    lightness -= 0.3;\\n    saturation = 0.4;\\n  } else if (type == 11) { // Seed\\n    hue = 0.4;\\n    saturation = 0.4;\\n  } else if (type == 12) { // Stone\\n    hue = -0.4 + (data.g * 0.5);\\n    saturation = 0.1;\\n  } else if (type == 13) { // Wood\\n    hue = (data.g * 0.1);\\n    saturation = 0.3;\\n    lightness = 0.3 + data.g * 0.3;\\n  } else if (type == 14) { // Egg\\n    hue = 0.9;\\n    saturation = age;\\n    lightness = 1.0;\\n  } else if (type == 15) { // Tail\\n    hue += fract(age * 255.*1.2)*0.2;\\n    lightness += 0.4;\\n    // saturation += fract(age * 255.*6.);\\n  }\\n  //  else if (type == 15) { // mite\\n\\n  // } else if (type == 16) { // oil\\n  //   hue = (data.g * 5.0) + t * .008;\\n\\n  //   saturation = 0.2;\\n  //   lightness = 0.3;\\n  // } else if (type == 17) { // Rocket\\n  //   hue = 0.0;\\n  //   saturation = 0.4 + data.b;\\n  //   lightness = 0.9;\\n  // } else if (type == 18) { // fungus\\n  //   hue = (data.g * 0.15) - 0.1;\\n  //   saturation = (data.g * 0.8) - 0.05;\\n\\n  //   // (data.g * 0.00);\\n  //   lightness = 1.5 - (data.g * 0.2);\\n  // } else if (type == 19) { // seed/flower\\n\\n  //   hue = fract(fract(data.b * 2.) * 0.5) - 0.3;\\n  //   saturation = 0.7 * (data.g + 0.4) + data.b * 0.2;\\n  //   lightness = 0.9 * (data.g + 0.9);\\n  // }\\n  if (isSnapshot == false) {\\n    lightness *= (0.975 + snoise_1_11(floor(uv * resolution / dpi)) * 0.025);\\n  }\\n  lightness += lightValue / 2.;\\n  saturation = min(saturation, 1.0);\\n  lightness = min(lightness, 1.0);\\n  color = hsv2rgb_4_0(vec3(hue, saturation, lightness));\\n  gl_FragColor = vec4(color, a);\\n}\"","module.exports = \"\\n// boring \\\"pass-through\\\" vertex shader\\nprecision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\nvoid main() {\\n  uv = position;\\n  gl_Position = vec4(position, 0, 1);\\n}\"","import * as wasm from './sandtable_bg.wasm';\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport const Species = Object.freeze({ Air:0,Glass:1,Sand:2,Water:3,Algae:4,Plant:5,Zoop:6,Egg:14,Fish:7,FishTail:15,Bacteria:8,Nitrogen:9,Waste:10,Seed:11,Stone:12,Wood:13, });\n/**\n*/\nexport class Cell {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_cell_free(ptr);\n    }\n}\n/**\n*/\nexport class Light {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_light_free(ptr);\n    }\n}\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    */\n    reset() {\n        wasm.universe_reset(this.ptr);\n    }\n    /**\n    */\n    calculate_light() {\n        wasm.universe_calculate_light(this.ptr);\n    }\n    /**\n    */\n    tick() {\n        wasm.universe_tick(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = wasm.universe_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = wasm.universe_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    O2() {\n        const ret = wasm.universe_O2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    CO2() {\n        const ret = wasm.universe_CO2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        const ret = wasm.universe_cells(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    lights() {\n        const ret = wasm.universe_lights(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} size\n    * @param {number} species\n    */\n    paint(x, y, size, species) {\n        wasm.universe_paint(this.ptr, x, y, size, species);\n    }\n    /**\n    */\n    push_undo() {\n        wasm.universe_push_undo(this.ptr);\n    }\n    /**\n    */\n    pop_undo() {\n        wasm.universe_pop_undo(this.ptr);\n    }\n    /**\n    */\n    flush_undos() {\n        wasm.universe_flush_undos(this.ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        const ret = wasm.universe_new(width, height);\n        return Universe.__wrap(ret);\n    }\n}\n\nexport const __wbg_random_09364f2d8647f133 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\n","if (window.safari) {\n  history.pushState(null, null, location.href);\n  window.onpopstate = function(event) {\n    history.go(1);\n  };\n}\n\nfunction mobileAndTabletcheck() {\n  var check = false;\n  (function(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n}\n\nif (mobileAndTabletcheck()) {\n  window.onbeforeunload = function() {\n    return true;\n  };\n}\n\n// if (\"serviceWorker\" in navigator) {\n//   window.addEventListener(\"load\", () => {\n//     navigator.serviceWorker\n//       .register(\"/service-worker.js\")\n//       .then(registration => {\n//         console.log(\"SW registered: \", registration);\n//       })\n//       .catch(registrationError => {\n//         console.log(\"SW registration failed: \", registrationError);\n//       });\n//   });\n// }\n"],"sourceRoot":""}